image: python:3.6

variables:
  PYPI_USER: SECURE
  PYPI_PASSWORD: SECURE
  PYPI_HOST: SECURE

stages:
  - test
  - build
  - deploy

before_script:
  - mkdir -p "$CI_PROJECT_DIR/.pip-cache"

cache:
  paths:
    - node_modules/
    - oereb_client/static/build/

test-py:2.7:
  stage: test
  image: python:2.7
  allow_failure: false
  script:
    - make git-attributes
    - make lint-py
    - make test-py

test-py:3.6:
  stage: test
  allow_failure: false
  cache:
    key: "PIP"
    paths:
      - "$CI_PROJECT_DIR/.pip-cache"
  script:
    - make git-attributes
    - make lint-py
    - make test-py


test-js:
  stage: test
  image: node:8-stretch
  script:
    - make git-attributes
    - make lint-js
    - make test-js


build:
  stage: build
  image: node:8-stretch
  allow_failure: false
  script:
    - apt-get update -qq
    - apt-get install -y -qq openjdk-8-jre
    - make build
  artifacts:
    paths:
      - oereb_client/static/
    expire_in: 1 day
  only:
    - /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
  except:
    - branches

deploy:
  stage: deploy
  dependencies:
    - build
  allow_failure: false
  cache:
    key: "PIP"
    paths:
      - "$CI_PROJECT_DIR/.pip-cache"
  script:
    - pip install -r requirements.txt
    - echo "[distutils]" >> ~/.pypirc
    - echo "index-servers =" >> ~/.pypirc
    - echo "    pypibl" >> ~/.pypirc
    - echo "" >> ~/.pypirc
    - echo "[pypibl]" >> ~/.pypirc
    - echo "username:" ${PYPI_USER} >> ~/.pypirc
    - echo "password:" ${PYPI_PASSWORD} >> ~/.pypirc
    - echo "repository:" ${PYPI_HOST} >> ~/.pypirc
    - python setup.py check bdist_wheel upload -r pypibl
    - echo "" > ~/.pypirc && rm ~/.pypirc
  only:
    - /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
  except:
    - branches


codeclimate:
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay
  services:
    - docker:dind
  script:
    - docker pull codeclimate/codeclimate
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate init
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -f json > codeclimate.json
  artifacts:
    paths: [codeclimate.json]
  only:
    - branches


after_script:
  - rm -vf ~/.pypirc

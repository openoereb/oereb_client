angular
  .module('docs')
  .config(config);

function config($locationProvider, $stateProvider, API_DATA, GUIDE_DATA, $urlRouterProvider, urlPrefix) {

  // Set HTML5 Mode
  $locationProvider.html5Mode(true);

  // Configure URL Router to redirect to /api
  // if state doesn't exist
  $urlRouterProvider.otherwise('/' + urlPrefix + 'guide');

  // Assign our root state for API pages to var
  // Assigning the basepage as the partials
  // Setup the sidebar to use our ApiController and template
  var apiState = {
    name: 'api',
    url: '/' + urlPrefix + 'api',
    views: {
      'content': {
        templateUrl: urlPrefix + 'partials/api.html'
      },
      'menu': {
        templateUrl: urlPrefix + 'partials/api-menu.html',
        controller: 'ApiController as ctrl'
      }
    }
  };

  // Same thing for our guide page
  var guideState = {
    name: 'guide',
    url: '/' + urlPrefix + 'guide',
    views: {
      'content': {
        templateUrl: urlPrefix + 'partials/guide.html'
      },
      'menu': {
        templateUrl: urlPrefix + 'partials/guide-menu.html',
        controller: 'GuideController as ctrl'
      }
    }
  };

  // Using the $stateProvider from UI-Router
  // to create the states in the application
  $stateProvider.state(apiState);
  $stateProvider.state(guideState);

  // Looping through all of our API pages
  // and dynamically creating new states based
  // on the data generated by Dgeni
  angular.forEach(API_DATA, function (parent) {

    var newState = {
      name: parent.name,
      url: '/' + urlPrefix + parent.url,
      views: {
        'content': {
          templateUrl: urlPrefix + parent.outputPath
        },
        'menu': {
          templateUrl: urlPrefix + 'partials/api-menu.html',
          controller: 'ApiController as ctrl'
        }
      }
    };

    // Creating the states using $stateProvider
    $stateProvider.state(newState);

    // In the case of API, we have multiple modules and each
    // of them have children, so we are doing the same thing
    // here but for the child states
    angular.forEach(parent.docs, function (doc) {

      var newState = {
        name: doc.name,
        url: '/' + urlPrefix + doc.url,
        views: {
          'content': {
            templateUrl: urlPrefix + doc.outputPath
          },
          'menu': {
            templateUrl: urlPrefix + 'partials/api-menu.html',
            controller: 'ApiController as ctrl'
          }
        }
      };

      // Creating the states using $stateProvider
      $stateProvider.state(newState);

    });

  });

  // Same thing for Guide, except in this case we only
  // have 'root' pages, so no need to loop twice
  angular.forEach(GUIDE_DATA, function (parent) {

    var newState = {
      name: parent.name,
      url: '/' + urlPrefix + parent.url,
      views: {
        'content': {
          templateUrl: urlPrefix + parent.outputPath
        },
        'menu': {
          templateUrl: urlPrefix + 'partials/guide-menu.html',
          controller: 'GuideController as ctrl'
        }
      }
    };

    // Creating the states using $stateProvider
    $stateProvider.state(newState);

  });

}

config.$inject = [
  "$locationProvider", "$stateProvider", "API_DATA", "GUIDE_DATA", "$urlRouterProvider", "urlPrefix"
];
